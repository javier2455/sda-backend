// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  username  String   @unique
  password  String
  role      String
  email     String?  @unique
}

model api {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  name        String
  description String
  url         String
  method      String
  visibility  String
  body        String?
  headers     api_headers[]
  params      api_params[]
  entities    api_entity[]
}

model api_headers {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  key        String
  value      String
  apiId      Int
  headersApi api      @relation(fields: [apiId], references: [id], onDelete: Cascade)
}

model api_params {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  name          String
  description   String
  dataType      String
  example       String
  inputOrOutput Int
  apiId         Int
  paramsApi     api      @relation(fields: [apiId], references: [id], onDelete: Cascade)
}

model api_entity {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  apiId     Int
  entityApi api      @relation(fields: [apiId], references: [id], onDelete: Cascade)
}
